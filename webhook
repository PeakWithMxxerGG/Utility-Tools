local WebhookURL = "YOUR_WEBHOOK_URL_HERE"

local function sendWebhook(title, description, color)
    local data = {
        ["embeds"] = {{
            ["title"] = "ðŸ‘‘ " .. title,
            ["description"] = description,
            ["color"] = color or 0x00ff00,
            ["footer"] = {
                ["text"] = "Supreme Protection V10 | " .. os.date("%Y-%m-%d %H:%M:%S")
            },
            ["fields"] = {
                {
                    ["name"] = "Game",
                    ["value"] = game.PlaceId .. " | " .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
                    ["inline"] = true
                },
                {
                    ["name"] = "Player",
                    ["value"] = LocalPlayer.Name .. " | " .. LocalPlayer.UserId,
                    ["inline"] = true
                },
                {
                    ["name"] = "Current VPN",
                    ["value"] = _G.currentVPN and (_G.currentVPN.ip .. " (" .. _G.currentVPN.country .. ")") or "None",
                    ["inline"] = true
                },
                {
                    ["name"] = "Protection Status",
                    ["value"] = "ðŸŸ¢ Active",
                    ["inline"] = true
                }
            }
        }}
    }
    
    pcall(function()
        HttpService:PostAsync(WebhookURL, HttpService:JSONEncode(data))
    end)
end

local function setupWebhookMonitoring()
    spawn(function()
        while true do
            sendWebhook("Protection Status", "Supreme Protection System Active\nAll Systems Operational", 0x00ff00)
            task.wait(300) -- Status update every 5 minutes
        end
    end)
end

getgenv().WebhookSystem = {
    Send = sendWebhook,
    Setup = setupWebhookMonitoring
}

return getgenv().WebhookSystem
